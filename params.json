{"name":"Oils-js","tagline":"Oils JS Framework for Node JS. Built on top of Express.","body":"oils\r\n======\r\n\r\n### What is Oils JS\r\n\r\nOils is a web framework built on top of Express framework. It's very flexible and very simple to use, you'll love it!\r\n\r\nThe reason why Oils framework was created is because the author wants a framework that just works; framework that is very close to Express, organized, highly intuitive and uses basic html, css, and javascript.\r\n\r\nThe author is **NOT** a fan of the ff:\r\n\r\n* using non-html syntax on the front-end\r\n* forcing to use sass / other css frameworks\r\n* forcing non standard javascript syntax\r\n* complicated build procedures before you can run the app\r\n\r\nThe default configuration is for running on local machine and on Openshift servers but it's configurable in conf.js.\r\n\r\n### Quick Start\r\n\r\nThis assumes you already have Node JS v0.10.x (or higher) installed.\r\n\r\n```\r\n> npm install oils -g\r\n\r\n> oils new HelloWorld --template zurb5\r\n\r\n```\r\n\r\ntemplate is optional...\r\n\r\n```\r\n> cd HelloWorld\r\n\r\n> npm install\r\n\r\n> node server.js\r\n```\r\n\r\n\r\n#### Latest Release(s)\r\n\r\nVersion 0.4.0 ([Download](https://github.com/mannyvergel/oils-js/archive/v0.4.0.zip))\r\n* restructured paths\r\n\r\nVersion 0.3.1 ([Download](https://github.com/mannyvergel/oils-js/archive/v0.3.1.zip))\r\n* used domains for error handling\r\n* added onError in controllers and routes\r\n* templates, oils new [folder] --template [template e.g. zurb5]\r\n* various bug fixes\r\n\r\nVersion 0.2.7 ([Download](https://github.com/mannyvergel/oils-js/archive/v0.2.7.zip))\r\n* Fix bug regarding ```includeModel``` caching\r\n* Added ```req, res``` parameters in ```beforeRender``` event hook\r\n\r\nVersion 0.2.5 ([Download](https://github.com/mannyvergel/oils-js/archive/v0.2.5.zip))\r\n* support for event hooks\r\n  * ```app.on('beforeRender', ...)``` \r\n  * ```app.on('initializeServer', ...)```\r\n* bug fixes\r\n\r\nVersion 0.2.4 ([Download](https://github.com/mannyvergel/oils-js/archive/v0.2.4.zip))\r\n* support for custom routes in controllers\r\n\r\n#### Directory Structure\r\n\r\n    |-- conf                  //config files and routes\r\n    |   |-- plugins           //plugins   \r\n    |-- web          \r\n    |   |-- public            //assets like css, js, images\r\n    |   |-- src               \r\n    |       |-- controllers   //controllers    \r\n    |       |-- models        //models for mongoose db \r\n    |       |-- views         //uses swig for templating \r\n\r\n\r\nYou can see the README.md's of each directory above for more information.\r\n\r\n#### Noteworthy Helper Functions\r\n\r\n##### ```include(path)```\r\n\r\nYou can use ```include``` function which is basically like ```require``` except that it's based on the the project directory if the path starts with '/'.\r\n\r\nE.g. Consider the ff structure:\r\n\r\n    |-- web    \r\n    |   |-- src           \r\n    |       |-- controllers  \r\n    |           |--folder\r\n    |              |--subfolder\r\n    |                 |--controller1.js    \r\n    |-- lib\r\n    |   |--folder\r\n    |      |--subfolder\r\n    |         |--lib1.js  \r\n\r\nIf you are in controller1.js and you want to import lib1.js\r\n\r\nInstead of using:\r\n\r\n````\r\nvar lib1 = require('../../../../../lib/folder/subfolder/lib1.js');\r\n```\r\n\r\nUse \r\n\r\n```\r\nvar lib1 = include('/lib/folder/subfolder/lib1.js');\r\n````\r\n\r\n##### ```includeModel(path)```\r\n\r\nloads a model based on the path and returns a Mongoose Model. The path also behaves like ```include``` i.e. if it starts with '/' it will base the path on the project's directory.\r\n\r\ne.g.\r\n```\r\nvar Book = includeModel('/web/models/Book.js');\r\n```\r\n\r\n##### ```models('modelName')```\r\n\r\nA convenience function for ```includeModel```\r\n\r\ne.g.\r\n```\r\nvar Book = models('Book');\r\n```\r\n\r\n### Components\r\nOils js uses Mongoose for ORM, Mongo DB for the database and Swig for templating. Only Mongo DB is supported for now but this may change in the future depending on the needs.\r\n\r\nFor the default templating, Swig has been chosen because it doesn't mess much with the html syntax. You can override this by setting the attributes of app.server before calling app.start(), however, do this at your own risk as future features may not support custom template engines (e.g. scaffolding).\r\n\r\n### Features\r\n\r\nThe follow are motivations behind creating Oils Js Framework:\r\n\r\n+ Intuitive MVC approach\r\n+ Automatic routing of controllers\r\n+ Organized folder structure\r\n+ Organized importing of js files using \"include\"\r\n+ Automatic creation of models and controllers\r\n+ Support for multiple database connections\r\n+ Uninterrupted Mongo DB Connection (auto reconnect)\r\n+ Uninterrupted server when there's an exception\r\n+ Graceful error handling per request\r\n+ Plugin support\r\n+ Event hooks\r\n\r\nFuture Features:\r\n\r\n+ Scaffolding\r\n\r\n\r\n### Usage\r\n\r\nThis sample app is self explanatory. Just browse through the directories and files and you will get the hang of it.\r\n\r\nExample:\r\n\r\nAfter you have set-up a new oils project. \r\n\r\n* Go to controllers folder.\r\n* Create a controller. e.g. test.js\r\n* Restart server.\r\n* Access your controller with your browser: http://localhost:8080/test\r\n\r\n### Plugins\r\n\r\nCheck plugin folder's [README.md](https://github.com/mannyvergel/oils-js/tree/master/template/oils/plugins) for more information.\r\n\r\n### Event Hooks\r\n\r\nStarting v0.2.5\r\n\r\n#### ```beforeRender```\r\n\r\n```\r\napp.on('beforeRender', function(view, options, callback, req, res) {\r\n\t//called before res.render(...);\r\n})\r\n```\r\n\r\n#### ```initializeServer```\r\n\r\n```\r\napp.on('initializeServer', function() {\r\n\tvar app = this;\r\n\tvar server = app.server; //express server\r\n\t...\r\n})\r\n```\r\n\r\nMore hooks to follow.\r\n\r\n### Authentication\r\n\r\nAuthentication is implemented as a plugin: [oils-auth-local](http://github.com/mannyvergel/oils-auth-local). Just place it in your project's plugin folder. i.e. under ```/oils/plugins/oils-auth-local```.\r\n\r\n\r\n### Contact\r\n\r\nIf you have questions, feel free to drop me an email: manny@mvergel.com\r\n\r\n### License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Manny\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}